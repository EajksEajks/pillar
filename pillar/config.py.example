class Development(object):
    PORT = 5000
    HOST = '0.0.0.0'
    SCHEME = 'http'
    DEBUG = True
    RFC1123_DATE_FORMAT = '%a, %d %b %Y %H:%M:%S GMT'
    BUGSNAG_API_KEY = ''

    # Authentication settings
    BLENDER_ID_ENDPOINT = os.environ.get(
        'BLENDER_ID_ENDPOINT', "https://www.blender.org/id").rstrip("/")

    # Settings for storage
    STORAGE_DIR = '/data/storage/pillar'
    SHARED_DIR = '/data/storage/shared'
    USE_X_SENDFILE = False

    # Fill in only if we are going to use a CDN-attached storage solution.
    # Currently we use GCS and do not have enough traffic to justify that
    CDN_STORAGE_USER = ''
    CDN_STORAGE_ADDRESS = ''
    CDN_SYNC_LOGS = ''
    CDN_RSA_KEY = ''
    CDN_KNOWN_HOSTS = ''

    # Credentials to access project on the Google Cloud where Google Cloud
    # Storage is enabled (Pillar will automatically create and manage buckets)
    GCLOUD_APP_CREDENTIALS = os.environ.get(
        'GOOGLE_APPLICATION_CREDENTIALS', '/data/config/google_app.json')
    GCLOUD_PROJECT = ''

    # Fill in only if we plan to sign our urls using a the CDN
    CDN_USE_URL_SIGNING = False
    CDN_SERVICE_DOMAIN_PROTOCOL = 'https'
    CDN_SERVICE_DOMAIN = ''
    CDN_CONTENT_SUBFOLDER = ''
    CDN_URL_SIGNING_KEY = ''

    # Settings for image processing (good defaults, should not be altered)
    UPLOADS_LOCAL_STORAGE_THUMBNAILS = {
        's': {'size': (90, 90), 'crop': True},
        'b': {'size': (160, 160), 'crop': True},
        't': {'size': (160, 160), 'crop': False},
        'm': {'size': (320, 320), 'crop': False},
        'l': {'size': (1024, 1024), 'crop': False},
        'h': {'size': (2048, 2048), 'crop': False}
    }

    # Settings for encoder (local will run FFMPEG on the server and is discouraged
    # for production setups)
    ENCODING_BACKEND = 'zencoder' #local, flamenco

    # Zencoder is a production ready encoding solution
    ZENCODER_API_KEY = ''
    ZENCODER_NOTIFICATIONS_SECRET = ''
    ZENCODER_NOTIFICATIONS_URL = 'http://zencoderfetcher/'

    BIN_FFPROBE ='/usr/bin/ffprobe'
    BIN_FFMPEG = '/usr/bin/ffmpeg'
    BIN_SSH = '/usr/bin/ssh'
    BIN_RSYNC = '/usr/bin/rsync'

    # Settings for indexing (currently only Algolia is supported)
    ALGOLIA_USER = ''
    ALGOLIA_API_KEY = ''
    ALGOLIA_INDEX_USERS = ''


class Deployment(Development): pass
